#!/bin/bash

# List of Pokémon to fetch
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Base API URL
API_URL="https://pokeapi.co/api/v2/pokemon"

# Directory to save data
OUTPUT_DIR="pokemon_data"
ERROR_LOG="errors.txt"

# Create directory if it doesn’t exist
mkdir -p "$OUTPUT_DIR"

# Clear old error log
> "$ERROR_LOG"

# Loop through each Pokémon
for name in "${POKEMONS[@]}"; do
    echo "Fetching data for $name..."

    OUTPUT_FILE="$OUTPUT_DIR/${name}.json"
    ATTEMPT=1
    SUCCESS=false

    # Retry up to 3 times if request fails
    while [ $ATTEMPT -le 3 ]; do
        STATUS_CODE=$(curl -s -w "%{http_code}" -o "$OUTPUT_FILE" "$API_URL/$name")

        if [ "$STATUS_CODE" -eq 200 ]; then
            echo "Saved data to $OUTPUT_FILE ✅"
            SUCCESS=true
            break
        else
            echo "Attempt $ATTEMPT failed for $name (HTTP $STATUS_CODE)"
            ((ATTEMPT++))
            sleep 2  # short delay before retry
        fi
    done

    # Log error if all attempts fail
    if [ "$SUCCESS" = false ]; then
        echo "❌ Failed to fetch data for $name after 3 attempts." | tee -a "$ERROR_LOG"
        echo "Timestamp: $(date)" >> "$ERROR_LOG"
        echo "-----------------------------------------" >> "$ERROR_LOG"
    fi

    # Delay between Pokémon to avoid rate limiting
    sleep 1
done

echo ""
echo "Batch processing completed."
echo "Error log (if any): $ERROR_LOG"
