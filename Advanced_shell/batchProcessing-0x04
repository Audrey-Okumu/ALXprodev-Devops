#!/bin/bash
# -----------------------------------------
# Task: Parallel Data Fetching
# Objective: Fetch Pokémon data in parallel using background processes and process management
# -----------------------------------------

API_URL="https://pokeapi.co/api/v2/pokemon"
OUTPUT_DIR="./pokemon_data"
mkdir -p "$OUTPUT_DIR"

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch Pokémon data
fetch_pokemon_data() {
    local name=$1
    local output_file="${OUTPUT_DIR}/${name}.json"

    echo "Fetching data for $name..."

    # Fetch data silently and save
    if curl -s -f "${API_URL}/${name}" -o "$output_file"; then
        echo "✅ Successfully fetched $name"
    else
        echo "❌ Failed to fetch $name" >&2
    fi
}

# Start all processes in the background
for name in "${POKEMON_LIST[@]}"; do
    fetch_pokemon_data "$name" &
done

# Show running background jobs
echo "🔍 Currently running background jobs:"
jobs

# Wait for all jobs to complete
wait

# Re-check if any jobs are still hanging (safety check)
if [ -n "$(jobs -p)" ]; then
    echo "⚠️ Some jobs are still running — terminating..."
    kill $(jobs -p)
fi

echo "🎉 All Pokémon data fetched and saved in $OUTPUT_DIR"
